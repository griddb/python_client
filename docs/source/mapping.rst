==================
データ型の対応関係
==================

.. _getter:

データ取得時
===========================

各GridDB TypeがPython上で取得されるデータ型との対応関係を示します。

========================= =========================
GridDB Type               取得されるデータ型
========================= =========================
STRING                    str
------------------------- -------------------------
BOOL                      bool
------------------------- -------------------------
BYTE                      int
SHORT                     int
INTEGER                   int
LONG                      int
------------------------- -------------------------
FLOAT                     float
DOUBLE                    float
------------------------- -------------------------
TIMESTAMP(ms)             datetime.datetime
TIMESTAMP(us)             datetime.datetime
TIMESTAMP(ns)             java.sql.Timestamp
------------------------- -------------------------
BLOB                      bytearray
------------------------- -------------------------
GEOMETRY                  str
========================= =========================

- 日時を扱うデータ型では、タイムゾーンはOS等の設定に従います。
- GridDB Typeが配列型の場合はNoneを返します。

.. _setter:

データ設定時
===========================

Python上で入力するデータ型とデータ設定可能なGridDB Typeとの対応関係を
示します。

.. csv-table::

    "入力データ型","入力データの作成例","STRING","BOOL","BYTE","SHORT","INTEGER","LONG","FLOAT","DOUBLE","TIMESTAMP(ms)","TIMESTAMP(us)","TIMESTAMP(ns)","BLOB","GEOMETRY"
    str,"v = str('ABC')","〇","×","×","×","×","×","×","×","×","×","×","×","〇"
    bool,"v = bool(True)","×","〇","×","×","×","×","×","×","×","×","×","×","×"
    int,"v = int(100)","×","×","〇","〇","〇","〇","〇","〇","×","×","×","×","×"
    float,"v = float(100.12)","×","×","×","×","×","×","〇","〇","×","×","×","×","×"
    datetime,"v = datetime.datetime(2024,9,3,10,55,45)","×","×","×","×","×","×","×","×","〇","〇","〇","×","×"
    Timestamp,"v = griddb.Timestamp(2024,9,3,10,55,45,123456789)","×","×","×","×","×","×","×","×","〇","〇","〇","×","×"
    bytearray,"v = bytearray(b'abc')","×","×","×","×","×","×","×","×","×","×","×","〇","×"

- 〇はデータ設定できるケースがある場合、×は設定できないことを意味します。
  〇であっても、値を保持できる範囲の違いにより、エラーになる場合や値が丸められる場合があります。
- 日時を扱うデータ型では、タイムゾーンはOS等の設定に従います。
- datetime型ではマイクロ秒精度に制限されますが、Timestamp型(java.sql.Timestamp型)を使うと、ナノ秒精度のデータを設定できます。
- GridDB Typeが配列型へのデータ設定はできません。

Apache Arrow形式でのデータ取得時
================================

各GridDB Typeはpyarrowの配列のデータ型で取得されます。

============ ===========================
GridDB Type  pyarrowで取得されるデータ型
============ ===========================
STRING       pyarrow.lib.StringArray     
------------ ---------------------------
BOOL         pyarrow.lib.BooleanArray
------------ ---------------------------
BYTE         pyarrow.lib.Int8Array
SHORT        pyarrow.lib.Int16Array
INTEGER      pyarrow.lib.Int32Array
LONG         pyarrow.lib.Int64Array
------------ ---------------------------
FLOAT        pyarrow.lib.FloatArray
DOUBLE       pyarrow.lib.DoubleArray
------------ ---------------------------
TIMESTAMP    pyarrow.lib.TimestampArray
------------ ---------------------------
BLOB         pyarrow.lib.BinaryArray
------------ ---------------------------
GEOMETRY     pyarrow.lib.StringArray
============ ===========================

- 取得対象に配列型を含む場合はエラーとなります。

Apache Arrow形式でのデータ設定時
================================

Python上で入力するArrowデータ型とデータ設定可能なGridDB Typeとの対応関係を
示します。

.. csv-table::

    "入力データ型","STRING","BOOL","BYTE","SHORT","INTEGER","LONG","FLOAT","DOUBLE","TIMESTAMP","BLOB","GEOMETRY"
    str,"〇","×","×","×","×","×","×","×","×","×","〇"
    bool,"×","〇","×","×","×","×","×","×","×","×","×"
    int8,"×","×","〇","×","×","×","×","×","×","×","×"
    int16,"×","×","×","〇","×","×","×","×","×","×","×"
    int32,"×","×","×","×","〇","×","×","×","×","×","×"
    int64,"×","×","×","×","×","〇","×","×","×","×","×"
    float4,"×","×","×","×","×","×","〇","×","×","×","×"
    float8,"×","×","×","×","×","×","×","〇","×","×","×"
    timestamp,"×","×","×","×","×","×","×","×","〇","×","×"
    binary,"×","×","×","×","×","×","×","×","×","〇","×"

- 〇はデータ設定できるケースがある場合、×は設定できないことを意味します。
  〇であっても、値を保持できる範囲の違いにより、エラーになる場合や値が丸められる場合があります。
- GridDB Typeが配列型へのデータ設定はできません。
